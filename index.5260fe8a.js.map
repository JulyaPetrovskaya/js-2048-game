{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar startButton = document.querySelector(\".start\");\nvar scoreDisplay = document.querySelector(\".game-score\");\nvar loseMessage = document.querySelector(\".message-lose\");\nvar winMessage = document.querySelector(\".message-win\");\nvar startMessage = document.querySelector(\".message-start\");\nvar cells = document.querySelectorAll(\".field-cell\");\nvar cellsData = [];\nvar isGameOver = false;\nvar score = 0;\nfor(var i = 0; i < 16; i++)cellsData.push({\n    value: 0\n});\nfunction addNewNumber() {\n    var emptyCells = cellsData.filter(function(cell) {\n        return cell.value === 0;\n    });\n    if (emptyCells.length > 0) {\n        var randomIndex = Math.floor(Math.random() * emptyCells.length);\n        var randomCell = emptyCells[randomIndex];\n        randomCell.value = Math.random() < 0.9 ? 2 : 4;\n        scoreDisplay.textContent = score;\n        updateCells();\n    }\n}\nfunction updateCells() {\n    cells.forEach(function(cell, index) {\n        var cellValue = cellsData[index].value;\n        if (cellValue !== 0) {\n            cell.textContent = cellValue;\n            cell.classList.remove(\"field-cell--2\", \"field-cell--4\", \"field-cell--8\", \"field-cell--16\", \"field-cell--32\", \"field-cell--64\", \"field-cell--128\", \"field-cell--256\", \"field-cell--512\", \"field-cell--1024\", \"field-cell--2048\");\n            cell.classList.add(\"field-cell--\".concat(cellValue));\n        } else {\n            cell.textContent = \"\";\n            cell.classList.remove(\"field-cell--2\", \"field-cell--4\", \"field-cell--8\", \"field-cell--16\", \"field-cell--32\", \"field-cell--64\", \"field-cell--128\", \"field-cell--256\", \"field-cell--512\", \"field-cell--1024\", \"field-cell--2048\");\n        }\n    });\n}\nstartButton.addEventListener(\"click\", function() {\n    resetGame();\n    addNewNumber();\n    startButton.textContent = \"Restart\";\n    startButton.classList.add(\"restart\");\n    startMessage.classList.add(\"hidden\");\n});\nfunction resetGame() {\n    score = 0;\n    cellsData.forEach(function(cell) {\n        cell.value = 0;\n    });\n    isGameOver = false;\n    scoreDisplay.textContent = \"0\";\n    loseMessage.classList.remove(\"show\");\n    winMessage.classList.remove(\"show\");\n    cells.forEach(function(cell) {\n        cell.textContent = \"\";\n        cell.classList.remove(\"field-cell--2\", \"field-cell--4\", \"field-cell--8\", \"field-cell--16\", \"field-cell--32\", \"field-cell--64\", \"field-cell--128\", \"field-cell--256\", \"field-cell--512\", \"field-cell--1024\", \"field-cell--2048\");\n    });\n    addNewNumber();\n}\nfunction checkWin() {\n    return cellsData.some(function(cell) {\n        return cell.value === 2048;\n    });\n}\nfunction checkGameOver() {\n    var emptyCells = cellsData.filter(function(cell) {\n        return cell.value === 0;\n    });\n    if (emptyCells.length === 0) {\n        for(var i = 0; i < cellsData.length; i++){\n            var cell = cellsData[i];\n            if (i % 4 !== 3 && cell.value === cellsData[i + 1].value) return false;\n            if (i < 12 && cell.value === cellsData[i + 4].value) return false;\n        }\n        return true;\n    }\n    return false;\n}\ndocument.addEventListener(\"keydown\", function(eventKey) {\n    if (!isGameOver) {\n        if (eventKey.key === \"ArrowLeft\") moveCellsLeft();\n        else if (eventKey.key === \"ArrowUp\") moveCellsUp();\n        else if (eventKey.key === \"ArrowRight\") moveCellsRight();\n        else if (eventKey.key === \"ArrowDown\") moveCellsDown();\n    }\n});\nfunction mergeCells(row) {\n    var arr = row.filter(function(num) {\n        return num;\n    });\n    for(var i = 0; i < arr.length; i++)if (arr[i] === arr[i + 1]) {\n        arr[i] *= 2;\n        score += arr[i];\n        arr.splice(i + 1, 1);\n    }\n    while(arr.length < 4)arr.push(0);\n    return arr;\n}\nfunction moveCellsLeft() {\n    var hasChanged = false;\n    for(var i = 0; i < 4; i++){\n        var row = [];\n        for(var j = 0; j < 4; j++)row.push(cellsData[i * 4 + j].value);\n        var merged = mergeCells(row);\n        for(var j1 = 0; j1 < 4; j1++)cellsData[i * 4 + j1].value = merged[j1];\n        if (!hasChanged && merged.join() !== row.join()) hasChanged = true;\n    }\n    if (hasChanged) updateData();\n}\nfunction moveCellsRight() {\n    var hasChanged = false;\n    for(var i = 0; i < 4; i++){\n        var row = [];\n        for(var j = 3; j >= 0; j--)row.push(cellsData[i * 4 + j].value);\n        var merged = mergeCells(row);\n        for(var j1 = 3; j1 >= 0; j1--)cellsData[i * 4 + j1].value = merged[3 - j1];\n        if (!hasChanged && merged.join() !== row.join()) hasChanged = true;\n    }\n    if (hasChanged) updateData();\n}\nfunction moveCellsUp() {\n    var hasChanged = false;\n    for(var j = 0; j < 4; j++){\n        var column = [];\n        for(var i = 0; i < 4; i++)column.push(cellsData[i * 4 + j].value);\n        var merged = mergeCells(column);\n        for(var i1 = 0; i1 < 4; i1++)cellsData[i1 * 4 + j].value = merged[i1];\n        if (!hasChanged && merged.join() !== column.join()) hasChanged = true;\n    }\n    if (hasChanged) updateData();\n}\nfunction updateData() {\n    addNewNumber();\n    updateCells();\n    updateScore();\n    if (checkGameOver()) gameOver(false);\n    if (checkWin()) gameOver(true);\n}\nfunction moveCellsDown() {\n    var hasChanged = false;\n    for(var j = 0; j < 4; j++){\n        var column = [];\n        for(var i = 3; i >= 0; i--)column.push(cellsData[i * 4 + j].value);\n        var merged = mergeCells(column);\n        for(var i1 = 3; i1 >= 0; i1--)cellsData[i1 * 4 + j].value = merged[3 - i1];\n        if (!hasChanged && merged.join() !== column.join()) hasChanged = true;\n    }\n    if (hasChanged) updateData();\n}\nfunction updateScore() {\n    scoreDisplay.textContent = score;\n}\nfunction gameOver(isWin) {\n    if (isWin) winMessage.classList.add(\"show\");\n    else {\n        isGameOver = true;\n        loseMessage.classList.add(\"show\");\n    }\n}\n\n//# sourceMappingURL=index.5260fe8a.js.map\n","'use strict';\n\nconst startButton = document.querySelector('.start');\nconst scoreDisplay = document.querySelector('.game-score');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\nconst cells = document.querySelectorAll('.field-cell');\n\nconst cellsData = [];\nlet isGameOver = false;\nlet score = 0;\n\nfor (let i = 0; i < 16; i++) {\n  cellsData.push({ value: 0 });\n}\n\nfunction addNewNumber() {\n  const emptyCells = cellsData.filter((cell) => cell.value === 0);\n\n  if (emptyCells.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const randomCell = emptyCells[randomIndex];\n\n    randomCell.value = Math.random() < 0.9 ? 2 : 4;\n\n    scoreDisplay.textContent = score;\n\n    updateCells();\n  }\n}\n\nfunction updateCells() {\n  cells.forEach((cell, index) => {\n    const cellValue = cellsData[index].value;\n\n    if (cellValue !== 0) {\n      cell.textContent = cellValue;\n\n      cell.classList.remove(\n        'field-cell--2',\n        'field-cell--4',\n        'field-cell--8',\n        'field-cell--16',\n        'field-cell--32',\n        'field-cell--64',\n        'field-cell--128',\n        'field-cell--256',\n        'field-cell--512',\n        'field-cell--1024',\n        'field-cell--2048',\n      );\n      cell.classList.add(`field-cell--${cellValue}`);\n    } else {\n      cell.textContent = '';\n\n      cell.classList.remove(\n        'field-cell--2',\n        'field-cell--4',\n        'field-cell--8',\n        'field-cell--16',\n        'field-cell--32',\n        'field-cell--64',\n        'field-cell--128',\n        'field-cell--256',\n        'field-cell--512',\n        'field-cell--1024',\n        'field-cell--2048',\n      );\n    }\n  });\n}\n\nstartButton.addEventListener('click', () => {\n  resetGame();\n  addNewNumber();\n  startButton.textContent = 'Restart';\n  startButton.classList.add('restart');\n  startMessage.classList.add('hidden');\n});\n\nfunction resetGame() {\n  score = 0;\n\n  cellsData.forEach((cell) => {\n    cell.value = 0;\n  });\n\n  isGameOver = false;\n\n  scoreDisplay.textContent = '0';\n  loseMessage.classList.remove('show');\n  winMessage.classList.remove('show');\n\n  cells.forEach((cell) => {\n    cell.textContent = '';\n\n    cell.classList.remove(\n      'field-cell--2',\n      'field-cell--4',\n      'field-cell--8',\n      'field-cell--16',\n      'field-cell--32',\n      'field-cell--64',\n      'field-cell--128',\n      'field-cell--256',\n      'field-cell--512',\n      'field-cell--1024',\n      'field-cell--2048',\n    );\n  });\n\n  addNewNumber();\n}\n\nfunction checkWin() {\n  return cellsData.some(cell => cell.value === 2048);\n}\n\nfunction checkGameOver() {\n  const emptyCells = cellsData.filter(cell => cell.value === 0);\n\n  if (emptyCells.length === 0) {\n    for (let i = 0; i < cellsData.length; i++) {\n      const cell = cellsData[i];\n\n      if (i % 4 !== 3 && cell.value === cellsData[i + 1].value) {\n        return false;\n      }\n\n      if (i < 12 && cell.value === cellsData[i + 4].value) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\ndocument.addEventListener('keydown', (eventKey) => {\n  if (!isGameOver) {\n    if (eventKey.key === 'ArrowLeft') {\n      moveCellsLeft();\n    } else if (eventKey.key === 'ArrowUp') {\n      moveCellsUp();\n    } else if (eventKey.key === 'ArrowRight') {\n      moveCellsRight();\n    } else if (eventKey.key === 'ArrowDown') {\n      moveCellsDown();\n    }\n  }\n});\n\nfunction mergeCells(row) {\n  const arr = row.filter(num => num);\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      arr[i] *= 2;\n      score += arr[i];\n      arr.splice(i + 1, 1);\n    }\n  }\n\n  while (arr.length < 4) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n\nfunction moveCellsLeft() {\n  let hasChanged = false;\n\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 0; j < 4; j++) {\n      row.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(row);\n\n    for (let j = 0; j < 4; j++) {\n      cellsData[i * 4 + j].value = merged[j];\n    }\n\n    if (!hasChanged && merged.join() !== row.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction moveCellsRight() {\n  let hasChanged = false;\n\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 3; j >= 0; j--) {\n      row.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(row);\n\n    for (let j = 3; j >= 0; j--) {\n      cellsData[i * 4 + j].value = merged[3 - j];\n    }\n\n    if (!hasChanged && merged.join() !== row.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction moveCellsUp() {\n  let hasChanged = false;\n\n  for (let j = 0; j < 4; j++) {\n    const column = [];\n\n    for (let i = 0; i < 4; i++) {\n      column.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(column);\n\n    for (let i = 0; i < 4; i++) {\n      cellsData[i * 4 + j].value = merged[i];\n    }\n\n    if (!hasChanged && merged.join() !== column.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction updateData() {\n  addNewNumber();\n  updateCells();\n  updateScore();\n\n  if (checkGameOver()) {\n    gameOver(false);\n  }\n\n  if (checkWin()) {\n    gameOver(true);\n  }\n}\n\nfunction moveCellsDown() {\n  let hasChanged = false;\n\n  for (let j = 0; j < 4; j++) {\n    const column = [];\n\n    for (let i = 3; i >= 0; i--) {\n      column.push(cellsData[i * 4 + j].value);\n    }\n\n    const merged = mergeCells(column);\n\n    for (let i = 3; i >= 0; i--) {\n      cellsData[i * 4 + j].value = merged[3 - i];\n    }\n\n    if (!hasChanged && merged.join() !== column.join()) {\n      hasChanged = true;\n    }\n  }\n\n  if (hasChanged) {\n    updateData();\n  }\n}\n\nfunction updateScore() {\n  scoreDisplay.textContent = score;\n}\n\nfunction gameOver(isWin) {\n  if (isWin) {\n    winMessage.classList.add('show');\n  } else {\n    isGameOver = true;\n    loseMessage.classList.add('show');\n  }\n}\n"],"names":["startButton","document","querySelector","scoreDisplay","loseMessage","winMessage","startMessage","cells","querySelectorAll","cellsData","isGameOver","score","i","push","value","addNewNumber","emptyCells","filter","cell","length","randomIndex","Math","floor","random","randomCell","textContent","updateCells","forEach","index","cellValue","classList","remove","add","concat","mergeCells","row","arr","num","splice","updateData","checkGameOver","gameOver","some","isWin","addEventListener","eventKey","key","moveCellsLeft","hasChanged","j","merged","j1","join","moveCellsUp","column","i1","moveCellsRight","moveCellsDown"],"version":3,"file":"index.5260fe8a.js.map"}